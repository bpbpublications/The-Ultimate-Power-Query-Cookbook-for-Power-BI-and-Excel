(TableStartDate as date, FiscalYearStartMonth as number) =>
  let
    Source = Table.FromList(
      List.Dates(
        TableStartDate, 
        Duration.Days(DateTime.LocalNow() - TableStartDate), 
        #duration(1, 0, 0, 0)
      ), 
      Splitter.SplitByNothing(), 
      {"Date"}, 
      null, 
      ExtraValues.Error
    ), 
    UpdateColumnType = Table.TransformColumnTypes(Source, {{"Date", type date}}), 
    AddCalendarYear = Table.AddColumn(UpdateColumnType, "Year", each Date.Year([Date]), Int64.Type), 
    AddCalendarMonthNo = Table.AddColumn(
      AddCalendarYear, 
      "Month", 
      each Date.Month([Date]), 
      Int64.Type
    ), 
    AddCalendarMonthName = Table.AddColumn(
      AddCalendarMonthNo, 
      "Month Name", 
      each Date.MonthName([Date]), 
      type text
    ), 
    AddCalendarDayOfWeek = Table.AddColumn(
      AddCalendarMonthName, 
      "Day Name", 
      each Date.DayOfWeekName([Date]), 
      type text
    ), 
    AddDay = Table.AddColumn(AddCalendarDayOfWeek, "Day", each Date.Day([Date]), Int64.Type), 
    AddFiscalYear = Table.AddColumn(
      AddDay, 
      "FiscalYear", 
      each if [Month] >= FiscalYearStartMonth then [Year] + 1 else [Year], 
      Int64.Type
    ), 
    AddFiscalPeriodNo = Table.AddColumn(
      AddFiscalYear, 
      "FiscalPeriodNo", 
      each 
        if [Month] >= FiscalYearStartMonth then
          [Month] - FiscalYearStartMonth + 1
        else
          [Month] + FiscalYearStartMonth - 1, 
      Int64.Type
    )
  in
    if FiscalYearStartMonth = 1 then AddDay else AddFiscalPeriodNo
